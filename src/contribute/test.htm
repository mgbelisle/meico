<!DOCTYPE html>
<html>

<head>
  <title>Payment Request Button Test</title>
</head>

<body>
  <p id="payment-request-button">
    <!-- A Stripe Element will be inserted here. -->
  </p>
  <script src="https://js.stripe.com/v3/"></script>
  <script>
    (async () => {
      let publicKey = 'pk_live_51J8XRYEFDQQA3h4CJHL5RQvmTN4978U4nC55YRpqDnwfz1lP9nkknLlNk5XjO4k23WMCazo9wVYvmv2uhXUKcPka00i4afVlKG';
      if (new URLSearchParams(window.location.search).has('test')) {
        publicKey = 'pk_test_51J8XRYEFDQQA3h4C30s4aoHtdgN7MfmlWLdXxDtZX2vVkdEdDPM959JKRmwjSddZAPOneD4GtnUto9iNtDQXduEi00MUljgS0G';
      }
      const stripe = Stripe(publicKey, {
        apiVersion: "2020-08-27",
      });
      const amount = 50;
      const paymentRequest = stripe.paymentRequest({
        country: 'US',
        currency: 'usd',
        total: {
          label: 'Donate $0.50 to Mei/Co.',
          amount: amount,
        },
        requestPayerName: true,
        requestPayerEmail: true,
      });
      const elements = stripe.elements();
      const paymentRequestButton = elements.create('paymentRequestButton', {
        paymentRequest,
      });
      // Check the availability of the Payment Request API first.
      if (await paymentRequest.canMakePayment()) {
        paymentRequestButton.mount('#payment-request-button');
      } else {
        Array.from(document.getElementsByClassName('payment-request')).forEach(e => {
          e.style.display = 'none';
        });
      }
      const resp = await (await fetch(
        'https://jovial-evening-318521.appspot.com/stripe/v1/payment_intents'+window.location.search,
        {
          'method': 'POST',
          'body': new URLSearchParams({
            'amount': amount,
            'currency': 'usd',
          }),
        },
      )).json();
      const clientSecret = resp.client_secret;
      paymentRequest.on('paymentmethod', async (ev) => {
        // Confirm the PaymentIntent without handling potential next actions (yet).
        const { paymentIntent, error: confirmError } = await stripe.confirmCardPayment(
          clientSecret,
          { payment_method: ev.paymentMethod.id },
          { handleActions: false }
        );
        if (confirmError) {
          // Report to the browser that the payment failed, prompting it to
          // re-show the payment interface, or show an error message and close
          // the payment interface.
          ev.complete('fail');
        } else {
          // Report to the browser that the confirmation was successful, prompting
          // it to close the browser payment method collection interface.
          ev.complete('success');
          // Check if the PaymentIntent requires any actions and if so let Stripe.js
          // handle the flow. If using an API version older than "2019-02-11"
          // instead check for: `paymentIntent.status === "requires_source_action"`.
          if (paymentIntent.status === "requires_action") {
            // Let Stripe.js handle the rest of the payment flow.
            const { error } = await stripe.confirmCardPayment(clientSecret);
            if (error) {
              alert(error);
            } else {
              alert('Thanks for your donation!');
            }
          } else {
            alert('Thanks for your donation!');
          }
        }
      });
    })();
  </script>
</body>

</html>